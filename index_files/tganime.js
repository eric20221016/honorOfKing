!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";function r(e,t){var n=document.querySelector(e),r=(n.offsetLeft,n.children),o=r.length;parseInt(n.clientWidth/o);if(t){var a=document.createElement("div");a.className="slider";var i=document.createElement("div");i.className="bar",i.style.width=1/o*100+"%";for(var s=0;s<r.length;s++)r[s].style.width=1/o*100+"%";a.appendChild(i),n.appendChild(a)}return $bar}n.r(t),n.d(t,"TGAnime",(function(){return s}));function o(e){var t,n,r,o={loop:!0,speed:600,grabCursor:!0,watchSlidesProgress:!0,mousewheelControl:!0,keyboardControl:!0,navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"},on:{progress:function(){for(var e=0;e<this.slides.length;e++){var t=this.slides[e].progress*(.5*this.width);this.slides[e].querySelector(".tganime-slide-inner").style.transform="translate3d("+t+"px, 0, 0)"}},touchStart:function(){for(var e=0;e<this.slides.length;e++)this.slides[e].style.transition=""},setTransition:function(e){for(var t=0;t<this.slides.length;t++)this.slides[t].style.transition=e+"ms",this.slides[t].querySelector(".tganime-slide-inner").style.transition=e+"ms"}}};t="https://cdnjs.cloudflare.com/ajax/libs/Swiper/4.0.7/css/swiper.min.css",n=function(){!function(e){var t={url:e.url||"",params:{}||e.params,loadRemove:!0,loading:e.loading,callback:e.callback||function(){}};t.loading&&common.ajaxLoading("show");var n=document.createElement("script");for(var r in n.async="async",t.params)n[r]=t.params[r];n.src=t.url,n.onload=n.onreadystatechange=function(){this.readyState&&"loaded"!==this.readyState&&"complete"!==this.readyState||t.callback()},document.getElementsByTagName("head")[0].appendChild(n)}({url:"https://cdnjs.cloudflare.com/ajax/libs/Swiper/4.0.7/js/swiper.min.js",callback:function(){var t=Object.assign(o,e);new Swiper(e.container,t)}})}||function(){},(r=document.createElement("link")).rel="stylesheet",r.href=t,r.onload=r.onreadystatechange=function(){n()},document.getElementsByTagName("head")[0].appendChild(r)}function a(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=function(e,t){if(!e)return;if("string"==typeof e)return i(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return i(e,t)}(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,o=function(){};return{s:o,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,s=!0,l=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return s=e.done,e},e:function(e){l=!0,a=e},f:function(){try{s||null==n.return||n.return()}finally{if(l)throw a}}}}function i(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var s={init:function(e,t){switch(e){case"tganime-tab-underline":r();break;case"tganime-slide-slidein":!function(e){for(var t=document.querySelector(e.tab),n=(t.offsetLeft,document.querySelectorAll(e.tabChild)||t.children),o=n.length,a=e.gesture||"mouseover",i=e.autoplay||!1,s=e.loop||!1,l=0,c=0,d=0,u=0,f=!0,m=(parseInt(t.clientWidth/o),0);m<o;m++)!function(t){"click"==a?n[t].addEventListener("click",(function(r){c=-1*(l=t)*100/o;for(var a=0;a<n.length;a++)n[a].classList.remove("on");n[l].classList.add("on"),v.style.transform="translate("+c+"%, 0)",e.slider&&(h.style.marginLeft=1/o*l*100+"%")})):n[t].addEventListener("mouseover",(function(r){c=-1*(l=t)*100/o;for(var a=0;a<n.length;a++)n[a].classList.remove("on");n[l].classList.add("on"),v.style.transform="translate("+c+"%, 0)",e.slider&&(h.style.marginLeft=1/o*l*100+"%")}))}(m);var h=e.slider?r(e.tab,e.slider):null,v=document.querySelector(e.slide);t.children,v.style.width=100*o+"%";for(var y=v.children,p=0;p<y.length;p++)y[p].style.width=1/o*100+"%";if(v.addEventListener("touchstart",(function(e){console.log(e),d=e.touches[0].clientX,u=e.touches[0].clientY}),!1),v.addEventListener("touchmove",(function(e){(console.log(e),f)&&(Math.abs(d-e.touches[0].clientX)>Math.abs(u-e.touches[0].clientY)&&(f=!1,d-e.touches[0].clientX>0?g.slideToNext():g.slideToPrev()))}),!1),v.addEventListener("touchend",(function(e){f=!0}),!1),i)setInterval((function(){g.slideToNext()}),i);var g={slideToNext:function(){++l==o&&(l=s?0:o-1);for(var t=0;t<n.length;t++)n[t].classList.remove("on");n[l].classList.add("on"),c=-1*l*100/o,n[l].classList.add("on"),v.style.transform="translate("+c+"%, 0)",e.slider&&(h.style.marginLeft=1/o*l*100+"%")},slideToPrev:function(){--l<0&&(l=s?o-1:0);for(var t=0;t<n.length;t++)n[t].classList.remove("on");n[l].classList.add("on"),c=-1*l*100/o,n[l].classList.add("on"),v.style.transform="translate("+c+"%, 0)",e.slider&&(h.style.marginLeft=1/o*l*100+"%")}}}(t);break;case"tganime-slide-book":o(t);break;case"tganime-header-fix":n=document.querySelector(".tganime-header-fix"),i=n.getBoundingClientRect().top,n.clientHeight,s=[],(l={init:function(){var e,t=a(l.queryChild(n));try{for(t.s();!(e=t.n()).done;){var r=e.value;s.push(r.clientHeight)}}catch(e){t.e(e)}finally{t.f()}},scaleHeader:function(){n.classList.add("fix")},resetChild:function(){n.style.height="auto";var e,t=a(l.queryChild(n));try{for(t.s();!(e=t.n()).done;){var r=e.value;r.style.transition="tranform .3s ease-in-out",r.style.transformOrigin="top left",r.style.transform="translateY(0)"}}catch(e){t.e(e)}finally{t.f()}},queryChild:function(e){var t=e.children;return 1==t.length?l.queryChild(t[0]):t}}).init(),0!=window.scrollY&&(i=window.scrollY+i,l.scaleHeader()),window.onscroll=function(){window.scrollY>=i?n.className.indexOf(" fix")<0&&l.scaleHeader():n.classList.remove("fix")};break;case"tganime-overlay-fadein":!function(e){var t=document.querySelector(e.overlay);document.querySelector(e.trigger),document.addEventListener("click",(function(n){if(n.target.className.indexOf(e.overlay)<0&&t.className.indexOf("show")>-1){t.classList.remove("fadein");var r=setTimeout((function(){t.classList.remove("show"),clearTimeout(r)}),100)}else if(n.target.className.indexOf(e.trigger.replace(".",""))>-1&&t.className.indexOf("show")<0){t.classList.add("show");var o=setTimeout((function(){t.classList.add("fadein"),clearTimeout(o)}),100)}}))}(t);break;case"tganime-totop":!function(e){var t;document.querySelector(e.container).addEventListener("click",(function(e){e.stopPropagation(),n.scrollToTop()})),document.addEventListener("touchstart",(function(e){clearInterval(t)})),document.addEventListener("mousewheel",(function(e){clearInterval(t)}));var n={scrollToTop:function(){var e=!1;0==e?t=setInterval((function(){var e=document.documentElement.scrollTop||document.body.scrollTop,n=Math.floor(-e/3);document.documentElement.scrollTop=document.body.scrollTop=e+n,!0,0==e&&clearInterval(t)}),50):(clearInterval(t),e=!0)}}}(t);break;default:return}var n,i,s,l}};window.TGAnime=s}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3RhYi90Z2FuaW1lLXRhYi11bmRlcmxpbmUvdGdhbmltZS10YWItdW5kZXJsaW5lLmpzIiwid2VicGFjazovLy8uL3NyYy9vdmVybGF5L3RnYW5pbWUtc2xpZGUtYm9vay90Z2FuaW1lLXNsaWRlLWJvb2suanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3V0aWwvdGdhbmltZS11dGlsLmpzIiwid2VicGFjazovLy8uL3NyYy90Z2FuaW1lLmpzIiwid2VicGFjazovLy8uL3NyYy9zbGlkZS90Z2FuaW1lLXNsaWRlLXNsaWRlaW4vdGdhbmltZS1zbGlkZS1zbGlkZWluLmpzIiwid2VicGFjazovLy8uL3NyYy9wYXJlbnRpbmcvdGdhbmltZS1oZWFkZXItZml4L3RnYW5pbWUtaGVhZGVyLWZpeC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvb3ZlcmxheS90Z2FuaW1lLW92ZXJsYXktZmFkZWluL3RnYW5pbWUtb3ZlcmxheS1mYWRlaW4uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2RvbGx5em9vbS90Z2FuaW1lLXRvdG9wL3RnYW5pbWUtdG90b3AuanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJpbml0VGFiVW5kZXJsaW5lIiwiX3RhYiIsIl9pc1NsaWRlciIsIiR0YWIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCIkdGFiQ2hpbGQiLCJvZmZzZXRMZWZ0IiwiY2hpbGRyZW4iLCJjaGlsZExlbmd0aCIsImxlbmd0aCIsInBhcnNlSW50IiwiY2xpZW50V2lkdGgiLCIkc2xpZGVyIiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsIiRiYXIiLCJzdHlsZSIsIndpZHRoIiwiYXBwZW5kQ2hpbGQiLCJpbml0U2xpZGVCb29rIiwiX29iaiIsIl91cmwiLCJjYWxsYmFjayIsImxpbmsiLCJzd2lwZXJPcHRpb25zIiwibG9vcCIsInNwZWVkIiwiZ3JhYkN1cnNvciIsIndhdGNoU2xpZGVzUHJvZ3Jlc3MiLCJtb3VzZXdoZWVsQ29udHJvbCIsImtleWJvYXJkQ29udHJvbCIsIm5hdmlnYXRpb24iLCJuZXh0RWwiLCJwcmV2RWwiLCJvbiIsInByb2dyZXNzIiwidGhpcyIsInNsaWRlcyIsImlubmVyVHJhbnNsYXRlIiwidHJhbnNmb3JtIiwidG91Y2hTdGFydCIsInRyYW5zaXRpb24iLCJzZXRUcmFuc2l0aW9uIiwib3B0Iiwib3B0aW9ucyIsInVybCIsInBhcmFtcyIsImxvYWRSZW1vdmUiLCJsb2FkaW5nIiwiY29tbW9uIiwiYWpheExvYWRpbmciLCJzY3JpcHQiLCJxIiwiYXN5bmMiLCJzcmMiLCJvbmxvYWQiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZWFkeVN0YXRlIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJnZXRTY3JpcHQiLCJhc3NpZ24iLCJTd2lwZXIiLCJjb250YWluZXIiLCJyZWwiLCJocmVmIiwiVEdBbmltZSIsImluaXQiLCJfY2xhc3MiLCJ0YWIiLCJxdWVyeVNlbGVjdG9yQWxsIiwidGFiQ2hpbGQiLCJfY2hpbGRMZW5ndGgiLCJnZXN0dXJlIiwiYXV0byIsImF1dG9wbGF5IiwiaW5kZXgiLCJzdGVwIiwidG91Y2hPZmZzZXRYIiwidG91Y2hPZmZzZXRZIiwiY2FuVG91Y2giLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsImNsYXNzTGlzdCIsInJlbW92ZSIsImFkZCIsIiRjb250YWluZXIiLCJzbGlkZXIiLCJtYXJnaW5MZWZ0Iiwic2xpZGUiLCIkbGlzdENoaWxkIiwiY29uc29sZSIsImxvZyIsInRvdWNoZXMiLCJjbGllbnRYIiwiY2xpZW50WSIsIk1hdGgiLCJhYnMiLCJmb28iLCJzbGlkZVRvTmV4dCIsInNsaWRlVG9QcmV2Iiwic2V0SW50ZXJ2YWwiLCJpbml0U2xpZGVJbiIsIiRoZWFkZXIiLCJkZWZhdWx0VG9wIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidG9wIiwiY2xpZW50SGVpZ2h0IiwiaGVhZGVySGVpZ2h0QXJyIiwiZm4iLCJxdWVyeUNoaWxkIiwiZWwiLCJwdXNoIiwic2NhbGVIZWFkZXIiLCJyZXNldENoaWxkIiwiaGVpZ2h0IiwidHJhbnNmb3JtT3JpZ2luIiwiX2VsIiwiJGNoaWxkcmVuIiwid2luZG93Iiwic2Nyb2xsWSIsIm9uc2Nyb2xsIiwiaW5kZXhPZiIsIiRvdmVybGF5Iiwib3ZlcmxheSIsInRyaWdnZXIiLCJ0YXJnZXQiLCJ0cmlnZ2VySGlkZVRpbWVyIiwic2V0VGltZW91dCIsImNsZWFyVGltZW91dCIsInJlcGxhY2UiLCJ0cmlnZ2VyU2hvd1RpbWVyIiwiaW5pdE92ZXJsYXlGYWRlaW4iLCJ0aW1lciIsInN0b3BQcm9wYWdhdGlvbiIsInV0aWwiLCJzY3JvbGxUb1RvcCIsImNsZWFySW50ZXJ2YWwiLCJjYW5jZWxTY3JvbGwiLCJvc1RvcCIsImRvY3VtZW50RWxlbWVudCIsInNjcm9sbFRvcCIsImJvZHkiLCJpc3BlZWQiLCJmbG9vciIsImluaXRUb3RvcCJdLCJtYXBwaW5ncyI6ImFBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdBQUdGLEVBQWlCRSxHQUNuQixPQUFPRixFQUFpQkUsR0FBVUMsUUFHbkMsSUFBSUMsRUFBU0osRUFBaUJFLEdBQVksQ0FDekNHLEVBQUdILEVBQ0hJLEdBQUcsRUFDSEgsUUFBUyxJQVVWLE9BTkFJLEVBQVFMLEdBQVVNLEtB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LEVBQVN4QyxVQUFVQyxPQUFPLFFBQzFCNkMsYUFBYUYsS0FDWixVQUVILEdBQUk3QyxFQUFFNEMsT0FBTy9HLFVBQVUyRyxRQUFRckcsRUFBS3dHLFFBQVFLLFFBQVEsSUFBSyxNQUFRLEdBQUtQLEVBQVM1RyxVQUFVMkcsUUFBUSxRQUFVLEVBQUcsQ0FDNUdDLEVBQVN4QyxVQUFVRSxJQUFJLFFBRXZCLElBQUk4QyxFQUFtQkgsWUFBVyxXQUNoQ0wsRUFBU3hDLFVBQVVFLElBQUksVUFDdkI0QyxhQUFhRSxLQUNaLFNISUhDLENBQWtCL0csR0FDbEIsTUFDQSxJQUFLLGlCSXpCRSxTQUFtQkEsR0FDaEMsSUFDSWdILEVBRFVqSSxTQUFTQyxjQUFjZ0IsRUFBSzBDLFdBR2xDa0IsaUJBQWlCLFNBQVMsU0FBQ0MsR0FDakNBLEVBQUVvRCxrQkFDRkMsRUFBS0MsaUJBR1BwSSxTQUFTNkUsaUJBQWlCLGNBQWMsU0FBQ0MsR0FDdkN1RCxjQUFjSixNQUdoQmpJLFNBQVM2RSxpQkFBaUIsY0FBYyxTQUFDQyxHQUN2Q3VELGNBQWNKLE1BR2hCLElBQUlFLEVBQU8sQ0FDVEMsWUFBYSxXQUNYLElBQ0VFLEdBQWUsRUFFRyxHQUFoQkEsRUFDRkwsRUFBUWhDLGFBQVksV0FDbEIsSUFBSXNDLEVBQVF2SSxTQUFTd0ksZ0JBQWdCQyxXQUFhekksU0FBUzBJLEtBQUtELFVBQzVERSxFQUFTL0MsS0FBS2dELE9BQU9MLEVBQVEsR0FDakN2SSxTQUFTd0ksZ0JBQWdCQyxVQUFZekksU0FBUzBJLEtBQUtELFVBQVlGLEVBQVFJLEdBQy9ELEVBQ0ssR0FBVEosR0FDRkYsY0FBY0osS0FFZixLQUVISSxjQUFjSixHQUNkSyxHQUFlLEtKUmZPLENBQVU1SCxHQUNWLE1BQ0YsUUFDRSxPRTdCTyxJQUNUa0YsRUFDRkMsRUFJRUksRUFFQUMsSUYwQk5VLE9BQU9yRCxRQUFVQSIsImZpbGUiOiJ0Z2FuaW1lLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAwKTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluaXRUYWJVbmRlcmxpbmUoX3RhYiwgX2lzU2xpZGVyKSB7XG4gIGxldCAkdGFiID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihfdGFiKTtcbiAgbGV0IHRhYk9mZnNldExlZnQgPSAkdGFiLm9mZnNldExlZnQ7XG4gIGxldCAkdGFiQ2hpbGQgPSAkdGFiLmNoaWxkcmVuO1xuICBsZXQgY2hpbGRMZW5ndGggPSAkdGFiQ2hpbGQubGVuZ3RoO1xuICBsZXQgdGFiV2lkdGggPSBwYXJzZUludCgkdGFiLmNsaWVudFdpZHRoIC8gY2hpbGRMZW5ndGgpO1xuXG4gIGlmIChfaXNTbGlkZXIpIHtcbiAgICBsZXQgJHNsaWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICRzbGlkZXIuY2xhc3NOYW1lID0gJ3NsaWRlcic7XG5cbiAgICBsZXQgJGJhciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICRiYXIuY2xhc3NOYW1lID0gJ2Jhcic7XG4gICAgJGJhci5zdHlsZS53aWR0aCA9IDEgLyBjaGlsZExlbmd0aCAqIDEwMCArICclJztcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgJHRhYkNoaWxkLmxlbmd0aDsgaSsrKSB7XG4gICAgICAkdGFiQ2hpbGRbaV0uc3R5bGUud2lkdGggPSAxIC8gY2hpbGRMZW5ndGggKiAxMDAgKyAnJSc7XG4gICAgfVxuXG4gICAgJHNsaWRlci5hcHBlbmRDaGlsZCgkYmFyKTtcbiAgICAkdGFiLmFwcGVuZENoaWxkKCRzbGlkZXIpO1xuICB9XG5cbiAgLy8gJHRhYi5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW1vdmUnLCAoZSkgPT4ge1xuICAvLyAgIGxldCBvZmZzZXRYID0gZS50YXJnZXQub2Zmc2V0TGVmdCAtIHRhYk9mZnNldExlZnQ7XG4gIC8vICAgbGV0IGluZGV4ID0gTWF0aC5mbG9vcihvZmZzZXRYL3RhYldpZHRoKTtcblxuICAvLyAgICRiYXIuc3R5bGUubWFyZ2luTGVmdCA9IDEgLyBjaGlsZExlbmd0aCAqIGluZGV4ICogMTAwICsgJyUnO1xuICAvLyB9KTtcblxuICByZXR1cm4gJGJhcjtcbn0iLCJpbXBvcnQge2dldENzc0xpbmssIGdldFNjcmlwdH0gZnJvbSAnLi4vLi4vdXRpbC90Z2FuaW1lLXV0aWwnXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluaXRTbGlkZUJvb2soX29iaikge1xuICBsZXQgaW50ZXJsZWF2ZU9mZnNldCA9IDAuNTtcbiAgbGV0IHN3aXBlck9wdGlvbnMgPSB7XG4gICAgbG9vcDogdHJ1ZSxcbiAgICBzcGVlZDogNjAwLFxuICAgIGdyYWJDdXJzb3I6IHRydWUsXG4gICAgd2F0Y2hTbGlkZXNQcm9ncmVzczogdHJ1ZSxcbiAgICBtb3VzZXdoZWVsQ29udHJvbDogdHJ1ZSxcbiAgICBrZXlib2FyZENvbnRyb2w6IHRydWUsXG4gICAgbmF2aWdhdGlvbjoge1xuICAgICAgbmV4dEVsOiBcIi5zd2lwZXItYnV0dG9uLW5leHRcIixcbiAgICAgIHByZXZFbDogXCIuc3dpcGVyLWJ1dHRvbi1wcmV2XCJcbiAgICB9LFxuICAgIG9uOiB7XG4gICAgICBwcm9ncmVzczogZnVuY3Rpb24gKCkge1xuICAgICAgICBsZXQgc3dpcGVyID0gdGhpcztcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzd2lwZXIuc2xpZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgbGV0IHNsaWRlUHJvZ3Jlc3MgPSBzd2lwZXIuc2xpZGVzW2ldLnByb2dyZXNzO1xuICAgICAgICAgIGxldCBpbm5lck9mZnNldCA9IHN3aXBlci53aWR0aCAqIGludGVybGVhdmVPZmZzZXQ7XG4gICAgICAgICAgbGV0IGlubmVyVHJhbnNsYXRlID0gc2xpZGVQcm9ncmVzcyAqIGlubmVyT2Zmc2V0O1xuICAgICAgICAgIHN3aXBlci5zbGlkZXNbaV0ucXVlcnlTZWxlY3RvcihcIi50Z2FuaW1lLXNsaWRlLWlubmVyXCIpLnN0eWxlLnRyYW5zZm9ybSA9IFwidHJhbnNsYXRlM2QoXCIgKyBpbm5lclRyYW5zbGF0ZSArIFwicHgsIDAsIDApXCI7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB0b3VjaFN0YXJ0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGxldCBzd2lwZXIgPSB0aGlzO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN3aXBlci5zbGlkZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBzd2lwZXIuc2xpZGVzW2ldLnN0eWxlLnRyYW5zaXRpb24gPSBcIlwiO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgc2V0VHJhbnNpdGlvbjogZnVuY3Rpb24gKHNwZWVkKSB7XG4gICAgICAgIGxldCBzd2lwZXIgPSB0aGlzO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN3aXBlci5zbGlkZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBzd2lwZXIuc2xpZGVzW2ldLnN0eWxlLnRyYW5zaXRpb24gPSBzcGVlZCArIFwibXNcIjtcbiAgICAgICAgICBzd2lwZXIuc2xpZGVzW2ldLnF1ZXJ5U2VsZWN0b3IoXCIudGdhbmltZS1zbGlkZS1pbm5lclwiKS5zdHlsZS50cmFuc2l0aW9uID0gc3BlZWQgKyBcIm1zXCI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgZ2V0Q3NzTGluaygnaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvU3dpcGVyLzQuMC43L2Nzcy9zd2lwZXIubWluLmNzcycsIGZ1bmN0aW9uICgpIHtcbiAgICBnZXRTY3JpcHQoe1xuICAgICAgdXJsOiAnaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvU3dpcGVyLzQuMC43L2pzL3N3aXBlci5taW4uanMnLFxuICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgbGV0IG9wdCA9IE9iamVjdC5hc3NpZ24oc3dpcGVyT3B0aW9ucywgX29iaik7XG4gICAgICAgIGxldCBzd2lwZXIgPSBuZXcgU3dpcGVyKF9vYmouY29udGFpbmVyLCBvcHQpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbn0iLCIgIGxldCBnZXRDc3NMaW5rID0gKF91cmwsIF9jYWxsYmFjaykgPT4ge1xuICAgIHZhciBjYWxsYmFjayA9IF9jYWxsYmFjayB8fCBmdW5jdGlvbiAoKSB7fTtcbiAgICB2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpbmsnKTtcbiAgICBsaW5rLnJlbCA9ICdzdHlsZXNoZWV0JztcbiAgICBsaW5rLmhyZWYgPSBfdXJsO1xuXG4gICAgbGluay5vbmxvYWQgPSBsaW5rLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGNhbGxiYWNrKCk7XG4gICAgfTtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImhlYWRcIilbMF0uYXBwZW5kQ2hpbGQobGluayk7XG4gIH1cblxuICBsZXQgZ2V0U2NyaXB0ID0gKG9wdCkgPT4ge1xuICAgIGxldCBvcHRpb25zID0ge1xuICAgICAgdXJsOiBvcHQudXJsIHx8ICcnLFxuICAgICAgcGFyYW1zOiB7fSB8fCBvcHQucGFyYW1zLFxuICAgICAgbG9hZFJlbW92ZTogdHJ1ZSxcbiAgICAgIGxvYWRpbmc6IG9wdC5sb2FkaW5nLFxuICAgICAgY2FsbGJhY2s6IG9wdC5jYWxsYmFjayB8fCBmdW5jdGlvbiAoKSB7fVxuICAgIH07XG5cbiAgICBpZiAob3B0aW9ucy5sb2FkaW5nKSB7XG4gICAgICBjb21tb24uYWpheExvYWRpbmcoJ3Nob3cnKTtcbiAgICB9XG4gICAgbGV0IHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICAgIHNjcmlwdC5hc3luYyA9IFwiYXN5bmNcIjtcbiAgICBmb3IgKGxldCBxIGluIG9wdGlvbnMucGFyYW1zKSB7XG4gICAgICBzY3JpcHRbcV0gPSBvcHRpb25zLnBhcmFtc1txXTtcbiAgICB9XG4gICAgc2NyaXB0LnNyYyA9IG9wdGlvbnMudXJsO1xuICAgIHNjcmlwdC5vbmxvYWQgPSBzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKCF0aGlzLnJlYWR5U3RhdGUgfHwgdGhpcy5yZWFkeVN0YXRlID09PSBcImxvYWRlZFwiIHx8IHRoaXMucmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiKSB7XG4gICAgICAgIG9wdGlvbnMuY2FsbGJhY2soKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaGVhZFwiKVswXS5hcHBlbmRDaGlsZChzY3JpcHQpO1xuICB9XG5cbiAgZXhwb3J0IHtcbiAgICBnZXRDc3NMaW5rLFxuICAgIGdldFNjcmlwdFxuICB9IiwiaW1wb3J0IGluaXRUYWJVbmRlcmxpbmUgZnJvbSAnLi90YWIvdGdhbmltZS10YWItdW5kZXJsaW5lL3RnYW5pbWUtdGFiLXVuZGVybGluZSdcbmltcG9ydCBpbml0U2xpZGVJbiBmcm9tICcuL3NsaWRlL3RnYW5pbWUtc2xpZGUtc2xpZGVpbi90Z2FuaW1lLXNsaWRlLXNsaWRlaW4nXG5pbXBvcnQgaW5pdFNsaWRlQm9vayBmcm9tICcuL292ZXJsYXkvdGdhbmltZS1zbGlkZS1ib29rL3RnYW5pbWUtc2xpZGUtYm9vaydcbmltcG9ydCBpbml0SGVhZGVyRml4IGZyb20gJy4vcGFyZW50aW5nL3RnYW5pbWUtaGVhZGVyLWZpeC90Z2FuaW1lLWhlYWRlci1maXgnXG5pbXBvcnQgaW5pdE92ZXJsYXlGYWRlaW4gZnJvbSAnLi9vdmVybGF5L3RnYW5pbWUtb3ZlcmxheS1mYWRlaW4vdGdhbmltZS1vdmVybGF5LWZhZGVpbidcbmltcG9ydCBpbml0VG90b3AgZnJvbSAnLi9kb2xseXpvb20vdGdhbmltZS10b3RvcC90Z2FuaW1lLXRvdG9wJ1xuXG52YXIgVEdBbmltZSA9IHtcbiAgaW5pdDogKF9jbGFzcywgX29iaikgPT4ge1xuICAgIHN3aXRjaCAoX2NsYXNzKSB7XG4gICAgICBjYXNlICd0Z2FuaW1lLXRhYi11bmRlcmxpbmUnOlxuICAgICAgICBpbml0VGFiVW5kZXJsaW5lKCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAndGdhbmltZS1zbGlkZS1zbGlkZWluJzpcbiAgICAgICAgaW5pdFNsaWRlSW4oX29iaik7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAndGdhbmltZS1zbGlkZS1ib29rJzpcbiAgICAgICAgaW5pdFNsaWRlQm9vayhfb2JqKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICd0Z2FuaW1lLWhlYWRlci1maXgnOlxuICAgICAgICBpbml0SGVhZGVyRml4KCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAndGdhbmltZS1vdmVybGF5LWZhZGVpbic6XG4gICAgICAgIGluaXRPdmVybGF5RmFkZWluKF9vYmopO1xuICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAndGdhbmltZS10b3RvcCc6XG4gICAgICAgIGluaXRUb3RvcChfb2JqKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm47XG4gICAgfVxuICB9XG59XG5cbndpbmRvdy5UR0FuaW1lID0gVEdBbmltZTtcblxuZXhwb3J0IHtcbiAgVEdBbmltZVxufTsiLCJpbXBvcnQgaW5pdFRhYlVuZGVybGluZSBmcm9tICcuLi8uLi90YWIvdGdhbmltZS10YWItdW5kZXJsaW5lL3RnYW5pbWUtdGFiLXVuZGVybGluZSdcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5pdFNsaWRlSW4oX29iaikge1xuICBsZXQgJHRhYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoX29iai50YWIpO1xuICBsZXQgdGFiT2Zmc2V0TGVmdCA9ICR0YWIub2Zmc2V0TGVmdDtcbiAgbGV0ICR0YWJDaGlsZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoX29iai50YWJDaGlsZCkgfHwgJHRhYi5jaGlsZHJlbjtcbiAgbGV0IF9jaGlsZExlbmd0aCA9ICR0YWJDaGlsZC5sZW5ndGg7XG4gIGxldCBnZXN0dXJlID0gX29iai5nZXN0dXJlIHx8ICdtb3VzZW92ZXInO1xuICBsZXQgYXV0byA9IF9vYmouYXV0b3BsYXkgfHwgZmFsc2U7XG4gIGxldCBsb29wID0gX29iai5sb29wIHx8IGZhbHNlO1xuICBsZXQgaW5kZXggPSAwO1xuICBsZXQgc3RlcCA9IDA7XG5cbiAgbGV0IHRvdWNoT2Zmc2V0WCA9IDA7XG4gIGxldCB0b3VjaE9mZnNldFkgPSAwO1xuICBsZXQgY2FuVG91Y2ggPSB0cnVlO1xuICBsZXQgdG91Y2hUaW1lcjtcblxuICBsZXQgdGFiV2lkdGggPSBwYXJzZUludCgkdGFiLmNsaWVudFdpZHRoIC8gX2NoaWxkTGVuZ3RoKTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IF9jaGlsZExlbmd0aDsgaSsrKSB7XG4gICAgKGZ1bmN0aW9uKG4pIHtcbiAgICAgIGlmIChnZXN0dXJlID09ICdjbGljaycpIHtcbiAgICAgICAgJHRhYkNoaWxkW25dLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICAgICAgICBpbmRleCA9IG47XG4gICAgICAgICAgc3RlcCA9IC0xICogaW5kZXggKiAxMDAgLyBfY2hpbGRMZW5ndGg7XG4gICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAkdGFiQ2hpbGQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICR0YWJDaGlsZFtpXS5jbGFzc0xpc3QucmVtb3ZlKCdvbicpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgICR0YWJDaGlsZFtpbmRleF0uY2xhc3NMaXN0LmFkZCgnb24nKTtcbiAgICAgICAgICAkY29udGFpbmVyLnN0eWxlLnRyYW5zZm9ybSA9ICd0cmFuc2xhdGUoJyArIHN0ZXAgKyAnJScgKyAnLCAwKSc7XG4gICAgICAgICAgaWYgKF9vYmouc2xpZGVyKSB7XG4gICAgICAgICAgICAkYmFyLnN0eWxlLm1hcmdpbkxlZnQgPSAxIC8gX2NoaWxkTGVuZ3RoICogaW5kZXggKiAxMDAgKyAnJSc7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgICR0YWJDaGlsZFtuXS5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW92ZXInLCAoZSkgPT4ge1xuICAgICAgICAgIGluZGV4ID0gbjtcbiAgICAgICAgICBzdGVwID0gLTEgKiBpbmRleCAqIDEwMCAvIF9jaGlsZExlbmd0aDtcbiAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8ICR0YWJDaGlsZC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgJHRhYkNoaWxkW2ldLmNsYXNzTGlzdC5yZW1vdmUoJ29uJyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgJHRhYkNoaWxkW2luZGV4XS5jbGFzc0xpc3QuYWRkKCdvbicpO1xuICAgICAgICAgICRjb250YWluZXIuc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZSgnICsgc3RlcCArICclJyArICcsIDApJztcbiAgICAgICAgICBpZiAoX29iai5zbGlkZXIpIHtcbiAgICAgICAgICAgICRiYXIuc3R5bGUubWFyZ2luTGVmdCA9IDEgLyBfY2hpbGRMZW5ndGggKiBpbmRleCAqIDEwMCArICclJztcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pKGkpXG4gIH1cblxuICBsZXQgJGJhciA9IF9vYmouc2xpZGVyID8gaW5pdFRhYlVuZGVybGluZShfb2JqLnRhYiwgX29iai5zbGlkZXIpIDogbnVsbDtcblxuICBsZXQgJGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoX29iai5zbGlkZSk7XG4gIGxldCAkc2xpZGVDaGlsZCA9ICR0YWIuY2hpbGRyZW47XG5cbiAgJGNvbnRhaW5lci5zdHlsZS53aWR0aCA9IF9jaGlsZExlbmd0aCAqIDEwMCArICclJztcblxuICBsZXQgJGxpc3RDaGlsZCA9ICRjb250YWluZXIuY2hpbGRyZW47XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgJGxpc3RDaGlsZC5sZW5ndGg7IGkrKykge1xuICAgICRsaXN0Q2hpbGRbaV0uc3R5bGUud2lkdGggPSAxIC8gX2NoaWxkTGVuZ3RoICogMTAwICsgJyUnO1xuICB9XG5cbiAgJGNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgKGUpID0+IHtcbiAgICBjb25zb2xlLmxvZyhlKVxuICAgIHRvdWNoT2Zmc2V0WCA9IGUudG91Y2hlc1swXS5jbGllbnRYO1xuICAgIHRvdWNoT2Zmc2V0WSA9IGUudG91Y2hlc1swXS5jbGllbnRZO1xuICB9LCBmYWxzZSk7XG5cbiAgJGNvbnRhaW5lci5hZGRFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCAoZSkgPT4ge1xuICAgIGNvbnNvbGUubG9nKGUpXG4gICAgaWYgKGNhblRvdWNoKSB7XG4gICAgICBsZXQgZGlzdGFuY2VYID0gTWF0aC5hYnModG91Y2hPZmZzZXRYIC0gZS50b3VjaGVzWzBdLmNsaWVudFgpLFxuICAgICAgICBkaXN0YW5jZVkgPSBNYXRoLmFicyh0b3VjaE9mZnNldFkgLSBlLnRvdWNoZXNbMF0uY2xpZW50WSk7XG5cbiAgICAgIGlmIChkaXN0YW5jZVggPiBkaXN0YW5jZVkpIHtcbiAgICAgICAgY2FuVG91Y2ggPSBmYWxzZTtcbiAgICAgICAgdG91Y2hPZmZzZXRYIC0gZS50b3VjaGVzWzBdLmNsaWVudFggPiAwID8gZm9vLnNsaWRlVG9OZXh0KCkgOiBmb28uc2xpZGVUb1ByZXYoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIGZhbHNlKTtcblxuICAkY29udGFpbmVyLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgKGUpID0+IHtcbiAgICBjYW5Ub3VjaCA9IHRydWU7XG4gIH0sIGZhbHNlKTtcblxuICBpZiAoYXV0bykge1xuICAgIHZhciBzbGlkZWluVGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICBmb28uc2xpZGVUb05leHQoKTtcbiAgICB9LCBhdXRvKTtcbiAgfVxuXG4gIHZhciBmb28gPSB7XG4gICAgc2xpZGVUb05leHQ6ICgpID0+IHtcbiAgICAgIGluZGV4Kys7XG4gICAgICBpZiAoaW5kZXggPT0gX2NoaWxkTGVuZ3RoKSB7XG4gICAgICAgIGluZGV4ID0gbG9vcCA/IDAgOiBfY2hpbGRMZW5ndGggLSAxO1xuICAgICAgfVxuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8ICR0YWJDaGlsZC5sZW5ndGg7IGkrKykge1xuICAgICAgICAkdGFiQ2hpbGRbaV0uY2xhc3NMaXN0LnJlbW92ZSgnb24nKTtcbiAgICAgIH1cblxuICAgICAgJHRhYkNoaWxkW2luZGV4XS5jbGFzc0xpc3QuYWRkKCdvbicpO1xuXG4gICAgICBzdGVwID0gLTEgKiBpbmRleCAqIDEwMCAvIF9jaGlsZExlbmd0aDtcbiAgICAgICR0YWJDaGlsZFtpbmRleF0uY2xhc3NMaXN0LmFkZCgnb24nKTtcbiAgICAgICRjb250YWluZXIuc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZSgnICsgc3RlcCArICclJyArICcsIDApJztcblxuICAgICAgaWYgKF9vYmouc2xpZGVyKSB7XG4gICAgICAgICRiYXIuc3R5bGUubWFyZ2luTGVmdCA9IDEgLyBfY2hpbGRMZW5ndGggKiBpbmRleCAqIDEwMCArICclJztcbiAgICAgIH1cblxuICAgIH0sXG4gICAgc2xpZGVUb1ByZXY6ICgpID0+IHtcbiAgICAgIGluZGV4LS07XG5cbiAgICAgIGlmIChpbmRleCA8IDApIHtcbiAgICAgICAgaW5kZXggPSBsb29wID8gX2NoaWxkTGVuZ3RoIC0gMSA6IDA7XG4gICAgICB9XG5cbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgJHRhYkNoaWxkLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICR0YWJDaGlsZFtpXS5jbGFzc0xpc3QucmVtb3ZlKCdvbicpO1xuICAgICAgfVxuXG4gICAgICAkdGFiQ2hpbGRbaW5kZXhdLmNsYXNzTGlzdC5hZGQoJ29uJyk7XG5cbiAgICAgIHN0ZXAgPSAtMSAqIGluZGV4ICogMTAwIC8gX2NoaWxkTGVuZ3RoO1xuICAgICAgJHRhYkNoaWxkW2luZGV4XS5jbGFzc0xpc3QuYWRkKCdvbicpO1xuICAgICAgJGNvbnRhaW5lci5zdHlsZS50cmFuc2Zvcm0gPSAndHJhbnNsYXRlKCcgKyBzdGVwICsgJyUnICsgJywgMCknO1xuXG4gICAgICBpZiAoX29iai5zbGlkZXIpIHtcbiAgICAgICAgJGJhci5zdHlsZS5tYXJnaW5MZWZ0ID0gMSAvIF9jaGlsZExlbmd0aCAqIGluZGV4ICogMTAwICsgJyUnO1xuICAgICAgfVxuXG4gICAgfVxuICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5pdEhlYWRlckZpeCgpIHtcbiAgbGV0ICRoZWFkZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcudGdhbmltZS1oZWFkZXItZml4JyksXG4gICAgZGVmYXVsdFRvcCA9ICRoZWFkZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wLFxuICAgIGRlZmF1bHRIZWlnaHQgPSAkaGVhZGVyLmNsaWVudEhlaWdodDtcblxuICBsZXQgJGhlYWRlckNoaWxkLFxuICAgICAgaGVhZGVySGVpZ2h0QXJyID0gW107XG5cbiAgbGV0IGZuID0ge1xuICAgIGluaXQ6ICgpID0+IHtcbiAgICAgICRoZWFkZXJDaGlsZCA9IGZuLnF1ZXJ5Q2hpbGQoJGhlYWRlcik7XG5cbiAgICAgIGZvciAobGV0IGVsIG9mICRoZWFkZXJDaGlsZCkge1xuICAgICAgICBoZWFkZXJIZWlnaHRBcnIucHVzaCggZWwuY2xpZW50SGVpZ2h0ICk7XG4gICAgICB9XG4gICAgfSxcbiAgICBzY2FsZUhlYWRlcjogKCkgPT4ge1xuICAgICAgLy8gJGhlYWRlci5zdHlsZS5oZWlnaHQgPSBkZWZhdWx0SGVpZ2h0IC8gMiArICdweCc7XG5cbiAgICAgICRoZWFkZXIuY2xhc3NMaXN0LmFkZCgnZml4Jyk7XG4gICAgfSxcbiAgICByZXNldENoaWxkOiAoKSA9PiB7XG4gICAgICAkaGVhZGVyLnN0eWxlLmhlaWdodCA9ICdhdXRvJztcblxuICAgICAgbGV0ICRoZWFkZXJDaGlsZCA9IGZuLnF1ZXJ5Q2hpbGQoJGhlYWRlcik7XG5cbiAgICAgIGZvciAobGV0IGVsIG9mICRoZWFkZXJDaGlsZCkge1xuICAgICAgICBlbC5zdHlsZS50cmFuc2l0aW9uID0gJ3RyYW5mb3JtIC4zcyBlYXNlLWluLW91dCc7XG4gICAgICAgIGVsLnN0eWxlLnRyYW5zZm9ybU9yaWdpbiA9ICd0b3AgbGVmdCc7XG4gICAgICAgIGVsLnN0eWxlLnRyYW5zZm9ybSA9ICd0cmFuc2xhdGVZKDApJztcbiAgICAgIH1cbiAgICB9LFxuICAgIHF1ZXJ5Q2hpbGQ6IChfZWwpID0+IHtcbiAgICAgIGxldCAkY2hpbGRyZW4gPSBfZWwuY2hpbGRyZW47XG5cbiAgICAgIGlmICgkY2hpbGRyZW4ubGVuZ3RoID09IDEpIHtcbiAgICAgICAgcmV0dXJuIGZuLnF1ZXJ5Q2hpbGQoJGNoaWxkcmVuWzBdKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiAkY2hpbGRyZW47XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZm4uaW5pdCgpO1xuXG4gIGlmICh3aW5kb3cuc2Nyb2xsWSAhPSAwKSB7XG4gICAgZGVmYXVsdFRvcCA9IHdpbmRvdy5zY3JvbGxZICsgZGVmYXVsdFRvcDtcbiAgICBmbi5zY2FsZUhlYWRlcigpO1xuICB9XG5cbiAgd2luZG93Lm9uc2Nyb2xsID0gZnVuY3Rpb24gKCkge1xuICAgIGlmICh3aW5kb3cuc2Nyb2xsWSA+PSBkZWZhdWx0VG9wKSB7XG4gICAgICBpZiAoJGhlYWRlci5jbGFzc05hbWUuaW5kZXhPZignIGZpeCcpIDwgMCkge1xuICAgICAgICBmbi5zY2FsZUhlYWRlcigpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAkaGVhZGVyLmNsYXNzTGlzdC5yZW1vdmUoJ2ZpeCcpO1xuICAgICAgLy8gZm4ucmVzZXRDaGlsZCgpO1xuICAgIH1cbiAgfVxuXG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5pdE92ZXJsYXlGYWRlaW4oX29iaikge1xuICBsZXQgJG92ZXJsYXkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKF9vYmoub3ZlcmxheSk7XG4gIGxldCAkdHJpZ2dlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoX29iai50cmlnZ2VyKTtcblxuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgaWYgKGUudGFyZ2V0LmNsYXNzTmFtZS5pbmRleE9mKF9vYmoub3ZlcmxheSkgPCAwICYmICRvdmVybGF5LmNsYXNzTmFtZS5pbmRleE9mKCdzaG93JykgPiAtMSkge1xuICAgICAgJG92ZXJsYXkuY2xhc3NMaXN0LnJlbW92ZSgnZmFkZWluJyk7XG5cbiAgICAgIGxldCB0cmlnZ2VySGlkZVRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICRvdmVybGF5LmNsYXNzTGlzdC5yZW1vdmUoJ3Nob3cnKTtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRyaWdnZXJIaWRlVGltZXIpO1xuICAgICAgfSwgMTAwKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKGUudGFyZ2V0LmNsYXNzTmFtZS5pbmRleE9mKF9vYmoudHJpZ2dlci5yZXBsYWNlKCcuJywgJycpKSA+IC0xICYmICRvdmVybGF5LmNsYXNzTmFtZS5pbmRleE9mKCdzaG93JykgPCAwKSB7XG4gICAgICAgICRvdmVybGF5LmNsYXNzTGlzdC5hZGQoJ3Nob3cnKTtcblxuICAgICAgICBsZXQgdHJpZ2dlclNob3dUaW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICRvdmVybGF5LmNsYXNzTGlzdC5hZGQoJ2ZhZGVpbicpO1xuICAgICAgICAgIGNsZWFyVGltZW91dCh0cmlnZ2VyU2hvd1RpbWVyKTtcbiAgICAgICAgfSwgMTAwKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pXG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5pdFRvdG9wKF9vYmopIHtcbiAgbGV0ICR0b3BCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKF9vYmouY29udGFpbmVyKTtcbiAgbGV0IHRpbWVyO1xuXG4gICR0b3BCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XG4gICAgdXRpbC5zY3JvbGxUb1RvcCgpO1xuICB9KVxuXG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCAoZSkgPT4ge1xuICAgIGNsZWFySW50ZXJ2YWwodGltZXIpO1xuICB9KTtcblxuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZXdoZWVsJywgKGUpID0+IHtcbiAgICBjbGVhckludGVydmFsKHRpbWVyKTtcbiAgfSk7XG5cbiAgbGV0IHV0aWwgPSB7XG4gICAgc2Nyb2xsVG9Ub3A6ICgpID0+IHtcbiAgICAgIGxldCBpc1RvcCA9IHRydWUsXG4gICAgICAgIGNhbmNlbFNjcm9sbCA9IGZhbHNlO1xuXG4gICAgICBpZiAoY2FuY2VsU2Nyb2xsID09IGZhbHNlKSB7XG4gICAgICAgIHRpbWVyID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIGxldCBvc1RvcCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgfHwgZG9jdW1lbnQuYm9keS5zY3JvbGxUb3A7XG4gICAgICAgICAgbGV0IGlzcGVlZCA9IE1hdGguZmxvb3IoLW9zVG9wIC8gMyk7XG4gICAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCA9IGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wID0gb3NUb3AgKyBpc3BlZWQ7XG4gICAgICAgICAgaXNUb3AgPSB0cnVlO1xuICAgICAgICAgIGlmIChvc1RvcCA9PSAwKSB7XG4gICAgICAgICAgICBjbGVhckludGVydmFsKHRpbWVyKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0sIDUwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNsZWFySW50ZXJ2YWwodGltZXIpO1xuICAgICAgICBjYW5jZWxTY3JvbGwgPSB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgfVxufSJdLCJzb3VyY2VSb290IjoiIn0=